on:
  push:
  pull_request:
jobs:
  test_unix:
    name: 'Test Unix with CMake'
    if: ${{ github.ref != 'refs/heads/ci-more' }}
    strategy:
      matrix:
        include:
          - os: 'ubuntu-latest'
            config: 'Release'
            cmake_generator: 'Unix Makefiles'
            shared: 'OFF'
          - os: 'ubuntu-latest'
            config: 'Debug'
            cmake_generator: 'Ninja'
            shared: 'OFF'
          - os: 'ubuntu-latest'
            config: 'Release'
            cmake_generator: 'Unix Makefiles'
            shared: 'ON'
          - os: 'macos-latest'
            config: 'Release'
            cmake_generator: 'Unix Makefiles'
            shared: 'OFF'
          - os: 'macos-latest'
            config: 'Debug'
            cmake_generator: 'Ninja'
            shared: 'OFF'
          - os: 'macos-latest'
            config: 'Release'
            cmake_generator: 'Ninja'
            shared: 'ON'
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'Install meson (Ubuntu)'
        if: ${{ contains(matrix.os, 'ubuntu') && (matrix.cmake_generator == 'Ninja') }}
        run: |
          sudo apt-get install ninja-build
      - name: 'Install meson (Macos)'
        if: ${{ contains(matrix.os, 'macos') && (matrix.cmake_generator == 'Ninja') }}
        run: |
          brew install meson
      - name: 'CMake configure'
        run: |
          mkdir build
          cd build
          cmake .. -DBUILD_SHARED_LIBS=${{ matrix.shared }} -G "${{ matrix.cmake_generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DFLATCC_INSTALL=ON -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/prefix
      - name: 'CMake build'
        run: |
          cmake --build build --parallel
      - name: 'CTest'
        run: |
          cd build
          ctest -V -C ${{ matrix.config }}
      - name: 'Install'
        run: |
          cmake --build build --target install
      - name: 'Test installed flatcc prefix'
        run: |
          mkdir user && cd user
          cmake "${{ github.workspace }}/test/install_test" -DCMAKE_PREFIX_PATH="${{ github.workspace }}/prefix"
          cmake --build .
          ctest .
  test_windows:
    name: 'Test Windows with CMake'
    if: ${{ github.ref != 'refs/heads/ci-more' }}
    strategy:
      matrix:
        config: ['Release', 'Debug']
        arch: ['Win32', 'x64']
    runs-on: 'windows-latest'
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'CMake configure'
        run: |
          mkdir build
          cd build
          cmake .. -A ${{ matrix.arch }} -DFLATCC_INSTALL=ON -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/prefix
      - name: 'CMake build'
        run: |
          cmake --build build --parallel --config ${{ matrix.config }} --verbose
      - name: 'CTest'
        run: |
          cd build
          ctest -V -C ${{ matrix.config }}
      - name: 'Install'
        run: |
          cmake --build build --target install --config ${{ matrix.config }}
      - name: 'Test installed flatcc prefix'
        run: |
          mkdir user && cd user
          cmake "${{ github.workspace }}/test/install_test" -A ${{ matrix.arch }} -DCMAKE_PREFIX_PATH="${{ github.workspace }}/prefix"
          cmake --build . --config ${{ matrix.config }}
          ctest . -C ${{ matrix.config }}
